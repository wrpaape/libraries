.PHONY: all clean

# SRC_DIR = $(C_INCLUDE_PATH)
# LIB_DIR = $(LIBRARY_PATH)

ROOT_DIR  = ..
SRC_DIR   = $(ROOT_DIR)/src
OBJ_DIR   = $(ROOT_DIR)/obj
LIB_DIR   = $(ROOT_DIR)/lib
TESTS_DIR = $(ROOT_DIR)/tests

UTILS_DIR = $(SRC_DIR)/utils
PCGB_DIR  = $(UTILS_DIR)
RAND_DIR  = $(UTILS_DIR)
BHEAP_DIR = $(SRC_DIR)/bheap

CC      = gcc
CFLAGS  = -g -I$(SRC_DIR) -std=c99 -Wall -D__USE_FIXED_PROTOTYPES__
AR      = ar
ARFLAGS = rcs

# test stuff
SHELL := /bin/zsh
CXXFLAGS += -g -Wall -Wextra -pthread
CPPFLAGS += -isystem $(GTEST_DIR)/include
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)
GTEST_FLAGS = -I$(GTEST_DIR)
USER_TEST_FLAGS = -I$(SRC_DIR) -lpthread

UTILS_NAME = utils
UTILS_SRC  = $(addprefix $(UTILS_DIR)/, $(addsuffix .c, $(UTILS_NAME)))
UTILS_HDR  = $(addprefix $(UTILS_DIR)/, $(addsuffix .h, $(UTILS_NAME)))
UTILS_OBJ  = $(addprefix $(OBJ_DIR)/, 	$(addsuffix .o, $(UTILS_NAME)))
UTILS_LIB  = $(addprefix $(LIB_DIR)/,   $(addsuffix .a, $(addprefix lib, $(UTILS_NAME))))
UTILS_ODEP = $(UTILS_SRC) $(UTILS_HDR)
UTILS_LDEP = $(UTILS_OBJ)

PCGB_NAME = pcg_basic
PCGB_SRC  = $(addprefix $(PCGB_DIR)/, $(addsuffix .c, $(PCGB_NAME)))
PCGB_HDR  = $(addprefix $(PCGB_DIR)/, $(addsuffix .h, $(PCGB_NAME)))
PCGB_OBJ  = $(addprefix $(OBJ_DIR)/,  $(addsuffix .o, $(PCGB_NAME)))
PCGB_ODEP = $(PCGB_SRC) $(PCGB_HDR)

RAND_NAME = rand
RAND_SRC  = $(addprefix $(RAND_DIR)/, $(addsuffix .c, $(RAND_NAME)))
RAND_HDR  = $(addprefix $(RAND_DIR)/, $(addsuffix .h, $(RAND_NAME)))
RAND_OBJ  = $(addprefix $(OBJ_DIR)/,  $(addsuffix .o, $(RAND_NAME)))
RAND_LIB  = $(addprefix $(LIB_DIR)/,  $(addsuffix .a, $(addprefix lib, $(RAND_NAME))))
RAND_ODEP = $(RAND_SRC) $(RAND_HDR) $(PCG_HDR)
RAND_LDEP = $(RAND_OBJ) $(PCGB_OBJ)

BHEAP_NAME = bheap
BHEAP_SRC  = $(addprefix $(BHEAP_DIR)/, $(addsuffix .c, $(BHEAP_NAME)))
BHEAP_HDR  = $(addprefix $(BHEAP_DIR)/, $(addsuffix .h, $(BHEAP_NAME)))
BHEAP_OBJ  = $(addprefix $(OBJ_DIR)/, 	$(addsuffix .o, $(BHEAP_NAME)))
BHEAP_LIB  = $(addprefix $(LIB_DIR)/,   $(addsuffix .a, $(addprefix lib, $(BHEAP_NAME))))
BHEAP_ODEP = $(BHEAP_SRC) $(BHEAP_HDR) $(UTILS_HDR)
BHEAP_LDEP = $(BHEAP_OBJ) $(UTILS_OBJ)


# tests
GTEST_ALL_NAME = gtest-all
GTEST_ALL_SRC  = $(addprefix $(GTEST_DIR)/src/, $(addsuffix .cc, $(GTEST_ALL_NAME)))
GTEST_ALL_OBJ  = $(addprefix $(OBJ_DIR)/,       $(addsuffix .o,  $(GTEST_ALL_NAME)))
GTEST_ALL_LIB  = $(addprefix $(LIB_DIR)/,       $(addsuffix .a,  $(GTEST_ALL_NAME)))
GTEST_ALL_ODEP = $(GTEST_ALL_SRC) $(GTEST_SRCS_)
GTEST_ALL_LDEP = $(GTEST_ALL_OBJ)

GTEST_MAIN_NAME = gtest_main
GTEST_MAIN_SRC  = $(addprefix $(GTEST_DIR)/src/, $(addsuffix .cc, $(GTEST_MAIN_NAME)))
GTEST_MAIN_OBJ  = $(addprefix $(OBJ_DIR)/,       $(addsuffix .o,  $(GTEST_MAIN_NAME)))
GTEST_MAIN_LIB  = $(addprefix $(LIB_DIR)/,       $(addsuffix .a,  $(GTEST_MAIN_NAME)))
GTEST_MAIN_ODEP = $(GTEST_MAIN_SRC) $(GTEST_SRCS_)
GTEST_MAIN_LDEP = $(GTEST_MAIN_OBJ)

UTILS_TEST_NAME = $(addsuffix _test, $(UTILS_NAME))
UTILS_TEST_SRC  = $(addprefix $(TESTS_DIR)/, $(addsuffix .cc, $(UTILS_TEST_NAME)))
UTILS_TEST_OBJ  = $(addprefix $(OBJ_DIR)/,   $(UTILS_TEST_NAME))
UTILS_TEST_BIN  = $(addprefix $(TESTS_DIR)/, $(UTILS_TEST_NAME))
UTILS_TEST_ODEP = $(UTILS_TEST_SRC) $(UTILS_SRC) $(GTEST_HEADERS)
UTILS_TEST_BDEP = $(UTILS_TEST_OBJ) $(GTEST_MAIN_LIB)

RAND_TEST_NAME = $(addsuffix _test, $(RAND_NAME))
RAND_TEST_SRC  = $(addprefix $(TESTS_DIR)/, $(addsuffix .cc, $(RAND_TEST_NAME)))
RAND_TEST_OBJ  = $(addprefix $(OBJ_DIR)/,   $(RAND_TEST_NAME))
RAND_TEST_BIN  = $(addprefix $(TESTS_DIR)/, $(RAND_TEST_NAME))
RAND_TEST_ODEP = $(RAND_TEST_SRC) $(RAND_SRC) $(GTEST_HEADERS)
RAND_TEST_BDEP = $(RAND_TEST_OBJ) $(GTEST_MAIN_LIB)

BHEAP_TEST_NAME = $(addsuffix _test, $(BHEAP_NAME))
BHEAP_TEST_SRC  = $(addprefix $(TESTS_DIR)/, $(addsuffix .cc, $(BHEAP_TEST_NAME)))
BHEAP_TEST_OBJ  = $(addprefix $(OBJ_DIR)/,   $(BHEAP_TEST_NAME))
BHEAP_TEST_BIN  = $(addprefix $(TESTS_DIR)/, $(BHEAP_TEST_NAME))
BHEAP_TEST_ODEP = $(BHEAP_TEST_SRC) $(BHEAP_SRC) $(GTEST_HEADERS)
BHEAP_TEST_BDEP = $(BHEAP_TEST_OBJ) $(GTEST_MAIN_LIB)

## all make targets
USER_LIBS  = $(UTILS_LIB) $(RAND_LIB) $(BHEAP_LIB)
TEST_LIBS  = $(GTEST_ALL_LIB) $(GTEST_MAIN_LIB) 
USER_TESTS = $(UTILS_TEST_BIN) $(RAND_TEST_BIN) $(BHEAP_TEST_BIN)

all: $(USER_LIBS) $(TEST_LIBS) $(USER_TESTS)

$(UTILS_LIB): $(UTILS_LDEP)
	$(AR) $(ARFLAGS) $@ $^

$(RAND_LIB): $(RAND_LDEP)
	$(AR) $(ARFLAGS) $@ $^

$(BHEAP_LIB): $(BHEAP_LDEP)
	$(AR) $(ARFLAGS) $@ $^

$(GTEST_ALL_LIB): $(GTEST_ALL_LDEP)
	$(AR) $(ARFLAGS) $@ $^

$(GTEST_MAIN_LIB): $(GTEST_MAIN_LDEP)
	$(AR) $(ARFLAGS) $@ $^

$(UTILS_TEST_BIN): $(UTILS_TEST_BDEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_TEST_FLAGS) -o $@ $^

$(RAND_TEST_BIN): $(RAND_TEST_BDEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_TEST_FLAGS) -o $@ $^

$(BHEAP_TEST_BIN): $(BHEAP_TEST_BDEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_TEST_FLAGS) -o $@ $^

$(UTILS_OBJ): $(UTILS_ODEP)
	$(CC) $(CFLAGS) -c -o $@ $<

$(PCGB_OBJ): $(PCGB_ODEP)
	$(CC) $(CFLAGS) -c -o $@ $<

$(RAND_OBJ): $(RAND_ODEP)
	$(CC) $(CFLAGS) -c -o $@ $<

$(BHEAP_OBJ): $(BHEAP_ODEP)
	$(CC) $(CFLAGS) -c -o $@ $<

$(GTEST_ALL_OBJ): $(GTEST_ALL_ODEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(GTEST_FLAGS) -c -o $@ $<

$(GTEST_MAIN_OBJ): $(GTEST_MAIN_ODEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(GTEST_FLAGS) -c -o $@ $<

$(UTILS_TEST_OBJ): $(UTILS_TEST_ODEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_TEST_FLAGS) -c -o $@ $<

$(RAND_TEST_OBJ): $(RAND_TEST_ODEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_TEST_FLAGS) -c -o $@ $<

$(BHEAP_TEST_OBJ): $(BHEAP_TEST_ODEP)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(USER_TEST_FLAGS) -c -o $@ $<

clean:
	$(RM) $(LIB_DIR)/*.a $(OBJ_DIR)/*.o $(ROOT_DIR)/*~ $(ROOT_DIR)/**/*~ $(ROOT_DIR)/**/**/*~
